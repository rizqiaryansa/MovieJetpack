diff --git a/app/item_favorite.txt b/app/item_favorite.txt
new file mode 100644
index 0000000..b10293a
--- /dev/null
+++ b/app/item_favorite.txt
@@ -0,0 +1 @@
+tv_title_movie_favorite
\ No newline at end of file
diff --git a/app/src/main/res/layout/item_favorite.xml b/app/src/main/res/layout/item_favorite.xml
index 786648d..ca61829 100644
--- a/app/src/main/res/layout/item_favorite.xml
+++ b/app/src/main/res/layout/item_favorite.xml
@@ -35,7 +35,7 @@
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:padding="@dimen/_8dp"
-                android:id="@+id/tv_title_movie_favorite"
+                android:id="@+id/tv_year_movie_favoritef"
                 android:textSize="16sp"
                 android:background="#80333333"
                 app:layout_constraintEnd_toEndOf="parent"
@@ -49,8 +49,8 @@
                 android:textColor="@android:color/white"
                 android:layout_height="wrap_content"
                 android:text='@{movie.title}'
-                android:id="@+id/tv_year_movie_favorite"
                 android:ellipsize="end"
+                android:id="@+id/tv_title_movie_favorite"
                 android:maxLines="2"
                 android:gravity="center"
                 android:layout_marginTop="@dimen/_8dp"
diff --git a/app/src/main/res/layout/item_shimmer.xml b/app/src/main/res/layout/item_shimmer.xml
deleted file mode 100644
index f660d95..0000000
--- a/app/src/main/res/layout/item_shimmer.xml
+++ /dev/null
@@ -1,46 +0,0 @@
-<?xml version="1.0" encoding="utf-8"?>
-
-<layout xmlns:android="http://schemas.android.com/apk/res/android"
-        xmlns:app="http://schemas.android.com/apk/res-auto">
-
-    <androidx.constraintlayout.widget.ConstraintLayout
-            android:id="@+id/rootLayout"
-            android:layout_width="match_parent"
-            android:layout_height="wrap_content">
-
-        <androidx.cardview.widget.CardView
-                android:id="@+id/ivImageShimmer"
-                android:layout_width="match_parent"
-                android:layout_height="185dp"
-                app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintTop_toTopOf="parent"
-                app:layout_constraintBottom_toBottomOf="parent"
-                android:layout_marginRight="@dimen/_8dp"
-                android:layout_marginEnd="@dimen/_8dp"
-                android:background="@color/colorShimmer"
-                app:cardCornerRadius="@dimen/_8dp"
-                app:cardElevation="4dp">
-
-            <View
-                    android:layout_width="match_parent"
-                    android:layout_height="185dp"
-                    android:background="@color/colorShimmer" />
-
-        </androidx.cardview.widget.CardView>
-
-        <View
-                android:id="@+id/tvTitleShimmer"
-                android:layout_width="120dp"
-                android:layout_height="16dp"
-                android:background="@color/colorShimmer"
-                android:layout_marginTop="@dimen/_8dp"
-                app:layout_constraintTop_toBottomOf="@id/ivImageShimmer"
-                app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintEnd_toEndOf="parent"
-                app:layout_constraintBottom_toBottomOf="parent"/>
-
-
-    </androidx.constraintlayout.widget.ConstraintLayout>
-
-</layout>
\ No newline at end of file
diff --git a/app2/src/main/res/layout/item_favorite.xml b/app2/src/main/res/layout/item_favorite.xml
index 786648d..fb76a99 100644
--- a/app2/src/main/res/layout/item_favorite.xml
+++ b/app2/src/main/res/layout/item_favorite.xml
@@ -35,7 +35,7 @@
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:padding="@dimen/_8dp"
-                android:id="@+id/tv_title_movie_favorite"
+                android:id="@+id/tv_year_movie_favoritef"
                 android:textSize="16sp"
                 android:background="#80333333"
                 app:layout_constraintEnd_toEndOf="parent"
@@ -49,7 +49,8 @@
                 android:textColor="@android:color/white"
                 android:layout_height="wrap_content"
                 android:text='@{movie.title}'
-                android:id="@+id/tv_year_movie_favorite"
+                android:ellipsize="end"
+                android:id="@+id/tv_title_movie_favorite"
                 android:ellipsize="end"
                 android:maxLines="2"
                 android:gravity="center"
diff --git a/app2/src/main/res/layout/item_movie.xml b/app2/src/main/res/layout/item_movie.xml
index ec462bd..453cb06 100644
--- a/app2/src/main/res/layout/item_movie.xml
+++ b/app2/src/main/res/layout/item_movie.xml
@@ -15,7 +15,7 @@
             android:layout_height="wrap_content">
 
         <androidx.appcompat.widget.AppCompatImageView
-                android:id="@+id/iv_image_poster"
+                android:id="@+id/iv_image_posterf"
                 android:contentDescription="@string/example_title"
                 android:scaleType="fitCenter"
                 app:layout_constraintEnd_toEndOf="parent"
@@ -45,7 +45,7 @@
                 app:fontFamily="@font/roboto_medium"/>
 
         <androidx.appcompat.widget.AppCompatTextView
-                android:id="@+id/tv_title_movie"
+                android:id="@+id/tv_title_movief"
                 tools:text="@string/tv_example_title"
                 android:layout_width="match_parent"
                 android:textColor="@android:color/white"
@@ -64,4 +64,4 @@
 
     </androidx.constraintlayout.widget.ConstraintLayout>
 
-</layout>
\ No newline at end of file
+</layout>
diff --git a/headdiff.txt b/headdiff.txt
new file mode 100644
index 0000000..3423b47
--- /dev/null
+++ b/headdiff.txt
@@ -0,0 +1,400 @@
+diff --git a/app/item_favorite.txt b/app/item_favorite.txt
+new file mode 100644
+index 0000000..b10293a
+--- /dev/null
++++ b/app/item_favorite.txt
+@@ -0,0 +1 @@
++tv_title_movie_favorite
+\ No newline at end of file
+diff --git a/app/src/main/res/layout/item_favorite.xml b/app/src/main/res/layout/item_favorite.xml
+index 786648d..ca61829 100644
+--- a/app/src/main/res/layout/item_favorite.xml
++++ b/app/src/main/res/layout/item_favorite.xml
+@@ -35,7 +35,7 @@
+                 android:layout_width="wrap_content"
+                 android:layout_height="wrap_content"
+                 android:padding="@dimen/_8dp"
+-                android:id="@+id/tv_title_movie_favorite"
++                android:id="@+id/tv_year_movie_favoritef"
+                 android:textSize="16sp"
+                 android:background="#80333333"
+                 app:layout_constraintEnd_toEndOf="parent"
+@@ -49,8 +49,8 @@
+                 android:textColor="@android:color/white"
+                 android:layout_height="wrap_content"
+                 android:text='@{movie.title}'
+-                android:id="@+id/tv_year_movie_favorite"
+                 android:ellipsize="end"
++                android:id="@+id/tv_title_movie_favorite"
+                 android:maxLines="2"
+                 android:gravity="center"
+                 android:layout_marginTop="@dimen/_8dp"
+diff --git a/app2/src/main/res/layout/item_favorite.xml b/app2/src/main/res/layout/item_favorite.xml
+index 786648d..fb76a99 100644
+--- a/app2/src/main/res/layout/item_favorite.xml
++++ b/app2/src/main/res/layout/item_favorite.xml
+@@ -35,7 +35,7 @@
+                 android:layout_width="wrap_content"
+                 android:layout_height="wrap_content"
+                 android:padding="@dimen/_8dp"
+-                android:id="@+id/tv_title_movie_favorite"
++                android:id="@+id/tv_year_movie_favoritef"
+                 android:textSize="16sp"
+                 android:background="#80333333"
+                 app:layout_constraintEnd_toEndOf="parent"
+@@ -49,7 +49,8 @@
+                 android:textColor="@android:color/white"
+                 android:layout_height="wrap_content"
+                 android:text='@{movie.title}'
+-                android:id="@+id/tv_year_movie_favorite"
++                android:ellipsize="end"
++                android:id="@+id/tv_title_movie_favorite"
+                 android:ellipsize="end"
+                 android:maxLines="2"
+                 android:gravity="center"
+diff --git a/app2/src/main/res/layout/item_movie.xml b/app2/src/main/res/layout/item_movie.xml
+index ec462bd..453cb06 100644
+--- a/app2/src/main/res/layout/item_movie.xml
++++ b/app2/src/main/res/layout/item_movie.xml
+@@ -15,7 +15,7 @@
+             android:layout_height="wrap_content">
+ 
+         <androidx.appcompat.widget.AppCompatImageView
+-                android:id="@+id/iv_image_poster"
++                android:id="@+id/iv_image_posterf"
+                 android:contentDescription="@string/example_title"
+                 android:scaleType="fitCenter"
+                 app:layout_constraintEnd_toEndOf="parent"
+@@ -45,7 +45,7 @@
+                 app:fontFamily="@font/roboto_medium"/>
+ 
+         <androidx.appcompat.widget.AppCompatTextView
+-                android:id="@+id/tv_title_movie"
++                android:id="@+id/tv_title_movief"
+                 tools:text="@string/tv_example_title"
+                 android:layout_width="match_parent"
+                 android:textColor="@android:color/white"
+@@ -64,4 +64,4 @@
+ 
+     </androidx.constraintlayout.widget.ConstraintLayout>
+ 
+-</layout>
+\ No newline at end of file
++</layout>
+diff --git a/test_case.txt b/test_case.txt
+index bf18197..e67a6a6 100644
+--- a/test_case.txt
++++ b/test_case.txt
+@@ -1,3 +1,4 @@
+-item_movie.xml
+-item_favorite.xml
+-item_shimmer.xml
+\ No newline at end of file
++app/item_movie.xml
++app/item_favorite.xml
++app/item_shimmer.xml
++app2
+\ No newline at end of file
+diff --git a/xml_id_script.py b/xml_id_script.py
+index 5708213..f61f75e 100644
+--- a/xml_id_script.py
++++ b/xml_id_script.py
+@@ -18,8 +18,6 @@ afterPath = "after/"
+ pathBefore = "before"
+ pathAfter = "after"
+ 
+-
+-
+ def print_repository(repo):
+     print('Repo description: {}'.format(repo.description))
+     print('Repo active branch is {}'.format(repo.active_branch))
+@@ -38,8 +36,6 @@ def print_commit(commit):
+     print(str("count: {} and size: {}".format(commit.count(),
+                                               commit.size)))
+ 
+-# def print_diff(commitA, commitB):
+-#     print('-----')
+ 
+ def writeFile(input):
+     # fileName = "/temp/input.txt"
+@@ -62,53 +58,72 @@ def writeFile(input):
+     nameFileBefore = ""
+     nameFileCompare = ""
+ 
++    nameFileWithModul = ""
++
+     setIdAfter = set()
+     setIdBefore = set()
+ 
++    modul = ""
++
+     newId = ""
+ 
+-    fileCase = None
++    tempModul = list()
++    tempNameFile = set()
+ 
+     if(os.path.exists(testCase)):
+         with open(testCase, "r") as fCase:
+             strStrip = fCase.read().splitlines()
+             tempCase = set(strStrip)
+             print("tempCase: " + str(tempCase))
++        
++        z = open(testCase, "r")
++
++        for lineModul in z:
++            strOnlyModul = lineModul.replace("\n", "").split("/")[0]
++            stryOnlyName = lineModul.replace("\n", "").split("/")
++            tempModul.append(strOnlyModul)
++            if(len(stryOnlyName) > 1):
++                modulSlash = strOnlyModul + "/" + stryOnlyName[1]
++                tempNameFile.add(str(modulSlash))
++        print("tempModule: " + str(tempModul))
++        print("tempName: " + str(tempNameFile))
+ 
+ 
+     f = open(tempName, "r")
+     for line in f:
+         if(patternBeforeFile in line[:3]):
+             if patternLayout in line:
++                modul = str(line[6:].split("/")[0])
+                 nameFileBefore = getFile(patternLayout, patternBeforeFile, line, pathBefore)
+                 nameFileCompare = getNameFileXML(nameFileBefore)
+         
+         if(patternAfterFile in line[:3]):
+             if patternLayout in line:
++                modul = str(line[6:].split("/")[0])
+                 nameFileAfter = getFile(patternLayout, patternAfterFile, line, pathAfter)
+             elif patternRemoveFile in line:
+                 if nameFileCompare in tempCase:
+                         print("Previous file has removed with name : " + nameFileCompare)
+                         nameFileCompare = ""
+ 
+-        if(nameFileCompare in tempCase):
+-            if(patternBeforeIdView == line[:1] and notPatternBefore(line)):
++        if(modul in tempModul):
++            if(patternBeforeIdView == line[:1]):
+                 newId = getIdView(patternIdView, line)
+                 if(newId.strip()):
+                     setIdBefore.add(newId.strip())
+-                    createFile(pathBefore, nameFileBefore, newId)
++                    createFile(pathBefore, nameFileBefore, newId, modul)
+                     newId = ""
+         
+             if(patternAfterIdView == line[:1]):
+                 newId = getIdView(patternIdView, line)
+                 if(newId.strip()):
+                     setIdAfter.add(newId.strip())
+-                    createFile(pathAfter, nameFileAfter, newId)
++                    createFile(pathAfter, nameFileAfter, newId, modul)
+                     newId = ""
+ 
+-        
+-    setFileBefore = getFileFromPackage(pathBefore)
+-    setFileAfter = getFileFromPackage(pathAfter)
++
++    setFileBefore = getModulFromPackage(pathBefore)
++    setFileAfter = getModulFromPackage(pathAfter)
+ 
+     checkIdView(setFileBefore, setFileAfter, beforePath, afterPath)
+ 
+@@ -129,36 +144,49 @@ def checkIdView(beforeFile, afterFile, beforePath, afterPath):
+     if(len(beforeFile) == len(afterFile)):
+ 
+         for(before, after) in zip(beforeFile, afterFile):
+-            beforeX = getFileWithoutPath(before, beforePath)
+-            afterX = getFileWithoutPath(after, afterPath)
+ 
+-            print(beforeX)
+-            print(afterX)
+-            if(beforeX == afterX):
+-                beforeWithPath = getFileWithPath(beforeX, beforePath)
+-                afterWithPath = getFileWithPath(afterX, afterPath)
++            beforeSlash = before + "/"
++            afterSlash = after + "/"
++
++            beforeWithPath = getFileFromPackage(beforeSlash)
++            afterWithPath = getFileFromPackage(afterSlash)
++
++            # print(str(beforeWithPath))
++            # print(str(afterWithPath))
++
++            # print("before " + before)
++            # print("after " + after)
++
++            for(beforeFile, afterFile) in zip(beforeWithPath, afterWithPath):
++
++                if(beforeFile == afterFile):
++
++                    fileBeforePath = beforeSlash + beforeFile
++                    fileAfterPath = afterSlash + afterFile
+ 
+-                beforeF = open(beforeWithPath, "r")
+-                afterF = open(afterWithPath, "r")
++                    print("file before with path : " + fileBeforePath)
++                    print("file after with path : " + fileAfterPath)
+ 
+-                setIdAfter = set()
+-                setIdBefore = set()
++                    beforeF = open(fileBeforePath, "r")
++                    afterF = open(fileAfterPath, "r")
+ 
+-                for beforeLine in beforeF:
+-                    setIdBefore.add(getNameWithoutNewLine(beforeLine))
+-                
+-                for afterLine in afterF:
+-                    setIdAfter.add(getNameWithoutNewLine(afterLine))
++                    setIdAfter = set()
++                    setIdBefore = set()
+ 
+-                print(str(setIdBefore))
+-                print(str(setIdAfter))
++                    for beforeLine in beforeF:
++                        setIdBefore.add(getNameWithoutNewLine(beforeLine))
++                        
++                    for afterLine in afterF:
++                        setIdAfter.add(getNameWithoutNewLine(afterLine))
+ 
+-                for beforeIdView in setIdBefore:
+-                    if beforeIdView not in setIdAfter:
+-                        print("id view " + beforeIdView + " has been changed or removed from file " + getNameFileXML(beforeX))
++                    for beforeIdView in setIdBefore:
++                        if beforeIdView not in setIdAfter:
++                            pathModule = fileBeforePath.split("/")[1]
++                            fileModule = pathModule + "/" + getNameFileXML(beforeFile)
++                            print("id view " + beforeIdView + " has been changed or removed from file " +  fileModule)
+ 
+-                # print(str(setIdBefore))
+-                # print(str(setIdAfter))
++                    # print(str(setIdBefore))
++                    # print(str(setIdAfter))
+ 
+ def getNameWithoutNewLine(line):
+     line = line.replace("\n", "")
+@@ -172,14 +200,23 @@ def getFileWithoutPath(file, path):
+     file = file.replace(path, "")
+     return file
+ 
+-def getFileFromPackage(path):
++def getFileFromPackage(modul):
+     setFile = set()
++
++    for getfile in os.listdir(modul):
++        setFile.add(getfile)
++    
++    # print("file " + str(setFile))
++    return setFile
++
++def getModulFromPackage(path):
++    setModul = set()
+     for filename in os.listdir(path):
+         filePath = path + "/" + filename
+-        setFile.add(filePath.strip())
++        setModul.add(filePath)
+     
+-    print(setFile)
+-    return setFile
++    # print("package " + str(setModul))
++    return setModul
+ 
+ def setValueFromFile(file):
+     with open(file, "r") as fCase:
+@@ -202,21 +239,29 @@ def notPatternBefore(line):
+         return True
+     return False
+ 
+-def createFile(path, nameFile, input):
++def createFile(path, nameFile, input, modul):
++
++    nameFileModul = path + "/" + modul + "/" + nameFile
++    nameModul = path + "/" + modul
++
+     if not os.path.exists(path):
+-           os.mkdir(path)
++        os.mkdir(path)
++    
++    if not os.path.exists(nameModul):
++        os.mkdir(nameModul)
+ 
+-    if os.path.isfile(nameFile):
+-        with open(nameFile, 'a') as file:
++    if os.path.isfile(nameFileModul):
++        with open(nameFileModul, 'a') as file:
+             file.write("\n" + input)
+     else:
+-        with open(nameFile, 'w') as fileW:
++        with open(nameFileModul, 'w') as fileW:
+             fileW.write(input)
+         # myFile = open(nameFile, 'w')
+         # myFile.write(input)
+         # myFile.close()
+ 
+ def getFile(patternLayout, patternFile, line, path):
++
+     nameFile = ""
+     posisiPattern = line.find(patternLayout)
+     lengthPattern = len(patternLayout)
+@@ -224,15 +269,14 @@ def getFile(patternLayout, patternFile, line, path):
+ 
+     if patternFile is patternBeforeFile:
+         nameFileBefore = line[posisiFile:]
+-        pathBefore = path
+-        nameFile = pathBefore + "/" + nameFileBefore
++        nameFile = nameFileBefore
+     elif patternFile is patternAfterFile:
+         nameFileAfter = line[posisiFile:]
+-        pathAfter = path
+-        nameFile = pathAfter + "/" + nameFileAfter
++        nameFile = nameFileAfter
+     
+     nameFile = nameFile.replace("xml", "txt")
+     nameFile = nameFile.replace("\n", "")
++    # print(nameFile)
+     return nameFile
+ 
+ 
+@@ -245,15 +289,10 @@ def getIdView(patternIdView, line):
+         nameIdView = line[posisiIdView:]
+         nameLength = len(nameIdView)
+         newId = nameIdView[:nameLength-2]
+-        print(newId)
++        # print(newId)
+ 
+     return newId
+ 
+-# def checkIdView():
+-
+-# repo_path = os.getenv('GIT_REPO_PATH')
+-# print_repository(repo_path)
+-
+ # repo = git.Repo(os.getenv('GIT_REPO_PATH'))
+ # print repo.git.status()
+ 
+@@ -261,6 +300,9 @@ if __name__ == "__main__":
+     repo_path = os.getenv('GIT_REPO_PATH')
+     # Repo object used to programmatically interact with Git repositories
+     repo = Repo(repo_path)
++
++    defaultBranch = "master"
++    
+     # check that the repository loaded correctly
+     if not repo.bare:
+         print('Repo at {} successfully loaded.'.format(repo_path))
+@@ -293,12 +335,14 @@ if __name__ == "__main__":
+ 
+         # beforeC = repo.head.commit
+         # afterC = "77a38266633ec3d224f5de799788adec94432492"
++        # g = git.Git(repo_path)
++        # g.pull()
++        # commitMessages = g.log('%s..%s' % ("master", "sukasuka"), '--pretty=format:%ad %an - %s', '--abbrev-commit')
+ 
+-        writeFile(str(repo.git.diff('HEAD~1')))
++        writeFile(repo.git.diff("master", "sukasuka"))
++        # writeFile(commitMessages)
+         # writeFile(repo.git.diff("HEAD","HEAD~1"))
+-        # checkIdView()
+ 
+-        # pass
+         # commits = list(repo.iter_commits('master'))[:COMMITS_TO_PRINT]
+         # for commit in commits:
+         #     print_commit(commit)
diff --git a/test_case.txt b/test_case.txt
index bf18197..e67a6a6 100644
--- a/test_case.txt
+++ b/test_case.txt
@@ -1,3 +1,4 @@
-item_movie.xml
-item_favorite.xml
-item_shimmer.xml
\ No newline at end of file
+app/item_movie.xml
+app/item_favorite.xml
+app/item_shimmer.xml
+app2
\ No newline at end of file
diff --git a/xml_id_script.py b/xml_id_script.py
index 5708213..b497ecb 100644
--- a/xml_id_script.py
+++ b/xml_id_script.py
@@ -2,6 +2,8 @@ import os
 import shutil
 import os.path
 import git
+import optparse
+from optparse import OptionParser
 import itertools
 from git import Repo
 
@@ -18,8 +20,6 @@ afterPath = "after/"
 pathBefore = "before"
 pathAfter = "after"
 
-
-
 def print_repository(repo):
     print('Repo description: {}'.format(repo.description))
     print('Repo active branch is {}'.format(repo.active_branch))
@@ -38,8 +38,6 @@ def print_commit(commit):
     print(str("count: {} and size: {}".format(commit.count(),
                                               commit.size)))
 
-# def print_diff(commitA, commitB):
-#     print('-----')
 
 def writeFile(input):
     # fileName = "/temp/input.txt"
@@ -62,53 +60,72 @@ def writeFile(input):
     nameFileBefore = ""
     nameFileCompare = ""
 
+    nameFileWithModul = ""
+
     setIdAfter = set()
     setIdBefore = set()
 
+    modul = ""
+
     newId = ""
 
-    fileCase = None
+    tempModul = list()
+    tempNameFile = set()
 
     if(os.path.exists(testCase)):
         with open(testCase, "r") as fCase:
             strStrip = fCase.read().splitlines()
             tempCase = set(strStrip)
             print("tempCase: " + str(tempCase))
+        
+        z = open(testCase, "r")
+
+        for lineModul in z:
+            strOnlyModul = lineModul.replace("\n", "").split("/")[0]
+            stryOnlyName = lineModul.replace("\n", "").split("/")
+            tempModul.append(strOnlyModul)
+            if(len(stryOnlyName) > 1):
+                modulSlash = strOnlyModul + "/" + stryOnlyName[1]
+                tempNameFile.add(str(modulSlash))
+        print("tempModule: " + str(tempModul))
+        print("tempName: " + str(tempNameFile))
 
 
     f = open(tempName, "r")
     for line in f:
         if(patternBeforeFile in line[:3]):
             if patternLayout in line:
+                modul = str(line[6:].split("/")[0])
                 nameFileBefore = getFile(patternLayout, patternBeforeFile, line, pathBefore)
-                nameFileCompare = getNameFileXML(nameFileBefore)
+                nameFileCompare = modul + "/" + getNameFileXML(nameFileBefore)
         
         if(patternAfterFile in line[:3]):
             if patternLayout in line:
+                modul = str(line[6:].split("/")[0])
                 nameFileAfter = getFile(patternLayout, patternAfterFile, line, pathAfter)
             elif patternRemoveFile in line:
-                if nameFileCompare in tempCase:
+                if nameFileCompare in tempNameFile:
                         print("Previous file has removed with name : " + nameFileCompare)
                         nameFileCompare = ""
 
-        if(nameFileCompare in tempCase):
-            if(patternBeforeIdView == line[:1] and notPatternBefore(line)):
+        if(modul in tempModul):
+            if(patternBeforeIdView == line[:1]):
                 newId = getIdView(patternIdView, line)
                 if(newId.strip()):
                     setIdBefore.add(newId.strip())
-                    createFile(pathBefore, nameFileBefore, newId)
+                    createFile(pathBefore, nameFileBefore, newId, modul)
                     newId = ""
         
             if(patternAfterIdView == line[:1]):
                 newId = getIdView(patternIdView, line)
                 if(newId.strip()):
                     setIdAfter.add(newId.strip())
-                    createFile(pathAfter, nameFileAfter, newId)
+                    createFile(pathAfter, nameFileAfter, newId, modul)
                     newId = ""
 
-        
-    setFileBefore = getFileFromPackage(pathBefore)
-    setFileAfter = getFileFromPackage(pathAfter)
+
+    setFileBefore = getModulFromPackage(pathBefore)
+    setFileAfter = getModulFromPackage(pathAfter)
 
     checkIdView(setFileBefore, setFileAfter, beforePath, afterPath)
 
@@ -129,36 +146,49 @@ def checkIdView(beforeFile, afterFile, beforePath, afterPath):
     if(len(beforeFile) == len(afterFile)):
 
         for(before, after) in zip(beforeFile, afterFile):
-            beforeX = getFileWithoutPath(before, beforePath)
-            afterX = getFileWithoutPath(after, afterPath)
 
-            print(beforeX)
-            print(afterX)
-            if(beforeX == afterX):
-                beforeWithPath = getFileWithPath(beforeX, beforePath)
-                afterWithPath = getFileWithPath(afterX, afterPath)
+            beforeSlash = before + "/"
+            afterSlash = after + "/"
 
-                beforeF = open(beforeWithPath, "r")
-                afterF = open(afterWithPath, "r")
+            beforeWithPath = getFileFromPackage(beforeSlash)
+            afterWithPath = getFileFromPackage(afterSlash)
 
-                setIdAfter = set()
-                setIdBefore = set()
+            # print(str(beforeWithPath))
+            # print(str(afterWithPath))
 
-                for beforeLine in beforeF:
-                    setIdBefore.add(getNameWithoutNewLine(beforeLine))
-                
-                for afterLine in afterF:
-                    setIdAfter.add(getNameWithoutNewLine(afterLine))
+            # print("before " + before)
+            # print("after " + after)
 
-                print(str(setIdBefore))
-                print(str(setIdAfter))
+            for(beforeFile, afterFile) in zip(beforeWithPath, afterWithPath):
 
-                for beforeIdView in setIdBefore:
-                    if beforeIdView not in setIdAfter:
-                        print("id view " + beforeIdView + " has been changed or removed from file " + getNameFileXML(beforeX))
+                if(beforeFile == afterFile):
 
-                # print(str(setIdBefore))
-                # print(str(setIdAfter))
+                    fileBeforePath = beforeSlash + beforeFile
+                    fileAfterPath = afterSlash + afterFile
+
+                    # print("file before with path : " + fileBeforePath)
+                    # print("file after with path : " + fileAfterPath)
+
+                    beforeF = open(fileBeforePath, "r")
+                    afterF = open(fileAfterPath, "r")
+
+                    setIdAfter = set()
+                    setIdBefore = set()
+
+                    for beforeLine in beforeF:
+                        setIdBefore.add(getNameWithoutNewLine(beforeLine))
+                        
+                    for afterLine in afterF:
+                        setIdAfter.add(getNameWithoutNewLine(afterLine))
+
+                    for beforeIdView in setIdBefore:
+                        if beforeIdView not in setIdAfter:
+                            pathModule = fileBeforePath.split("/")[1]
+                            fileModule = pathModule + "/" + getNameFileXML(beforeFile)
+                            print("id view " + beforeIdView + " has been changed or removed from file " +  fileModule)
+
+                    # print(str(setIdBefore))
+                    # print(str(setIdAfter))
 
 def getNameWithoutNewLine(line):
     line = line.replace("\n", "")
@@ -172,14 +202,23 @@ def getFileWithoutPath(file, path):
     file = file.replace(path, "")
     return file
 
-def getFileFromPackage(path):
+def getFileFromPackage(modul):
     setFile = set()
+
+    for getfile in os.listdir(modul):
+        setFile.add(getfile)
+    
+    # print("file " + str(setFile))
+    return setFile
+
+def getModulFromPackage(path):
+    setModul = set()
     for filename in os.listdir(path):
         filePath = path + "/" + filename
-        setFile.add(filePath.strip())
+        setModul.add(filePath)
     
-    print(setFile)
-    return setFile
+    # print("package " + str(setModul))
+    return setModul
 
 def setValueFromFile(file):
     with open(file, "r") as fCase:
@@ -202,21 +241,29 @@ def notPatternBefore(line):
         return True
     return False
 
-def createFile(path, nameFile, input):
+def createFile(path, nameFile, input, modul):
+
+    nameFileModul = path + "/" + modul + "/" + nameFile
+    nameModul = path + "/" + modul
+
     if not os.path.exists(path):
-           os.mkdir(path)
+        os.mkdir(path)
+    
+    if not os.path.exists(nameModul):
+        os.mkdir(nameModul)
 
-    if os.path.isfile(nameFile):
-        with open(nameFile, 'a') as file:
+    if os.path.isfile(nameFileModul):
+        with open(nameFileModul, 'a') as file:
             file.write("\n" + input)
     else:
-        with open(nameFile, 'w') as fileW:
+        with open(nameFileModul, 'w') as fileW:
             fileW.write(input)
         # myFile = open(nameFile, 'w')
         # myFile.write(input)
         # myFile.close()
 
 def getFile(patternLayout, patternFile, line, path):
+
     nameFile = ""
     posisiPattern = line.find(patternLayout)
     lengthPattern = len(patternLayout)
@@ -224,15 +271,14 @@ def getFile(patternLayout, patternFile, line, path):
 
     if patternFile is patternBeforeFile:
         nameFileBefore = line[posisiFile:]
-        pathBefore = path
-        nameFile = pathBefore + "/" + nameFileBefore
+        nameFile = nameFileBefore
     elif patternFile is patternAfterFile:
         nameFileAfter = line[posisiFile:]
-        pathAfter = path
-        nameFile = pathAfter + "/" + nameFileAfter
+        nameFile = nameFileAfter
     
     nameFile = nameFile.replace("xml", "txt")
     nameFile = nameFile.replace("\n", "")
+    # print(nameFile)
     return nameFile
 
 
@@ -245,15 +291,10 @@ def getIdView(patternIdView, line):
         nameIdView = line[posisiIdView:]
         nameLength = len(nameIdView)
         newId = nameIdView[:nameLength-2]
-        print(newId)
+        # print(newId)
 
     return newId
 
-# def checkIdView():
-
-# repo_path = os.getenv('GIT_REPO_PATH')
-# print_repository(repo_path)
-
 # repo = git.Repo(os.getenv('GIT_REPO_PATH'))
 # print repo.git.status()
 
@@ -261,6 +302,9 @@ if __name__ == "__main__":
     repo_path = os.getenv('GIT_REPO_PATH')
     # Repo object used to programmatically interact with Git repositories
     repo = Repo(repo_path)
+
+    defaultBranch = "master"
+    
     # check that the repository loaded correctly
     if not repo.bare:
         print('Repo at {} successfully loaded.'.format(repo_path))
@@ -291,14 +335,25 @@ if __name__ == "__main__":
         a_commit = commits_list[-1]
         b_commit = "a4186acd2ad2a077a5887f8ac16c50a37ca872fc"
 
+        parser = optparse.OptionParser()
+        parser.add_option('-t', '--target', dest='target', default="sukasuka", help="Set parameter branch")
+
+        (options, args) = parser.parse_args()
+
+        targetBranch = ""
+        if options.target:
+            targetBranch = options.target
+
         # beforeC = repo.head.commit
         # afterC = "77a38266633ec3d224f5de799788adec94432492"
+        # g = git.Git(repo_path)
+        # g.pull()
+        # commitMessages = g.log('%s..%s' % ("master", "sukasuka"), '--pretty=format:%ad %an - %s', '--abbrev-commit')
 
-        writeFile(str(repo.git.diff('HEAD~1')))
+        writeFile(repo.git.diff("master", targetBranch))
+        # writeFile(commitMessages)
         # writeFile(repo.git.diff("HEAD","HEAD~1"))
-        # checkIdView()
 
-        # pass
         # commits = list(repo.iter_commits('master'))[:COMMITS_TO_PRINT]
         # for commit in commits:
         #     print_commit(commit)